Images and Containers
An image is a file that contains everything needed to run, conceptually like an image. Like an image, it doesn't change and has no state. If you make a change to the image it will be lost when you stop the container.

Container is a running instance of an image.  This is like an object being an instance of a class.  An advantage is that you can run many containers from a single image without using more disk space.  You will use more RAM, each instance needing it's own process space.

When you use the docker run command you enter a new process space with a new OS and environment.

When using Docker Hub, it is common to use 'image' and 'repo' are used interchangeably.  Repos contain 1 or more images, that are the same, each with one or more tags.  Really, it is just an image with different versions tagged like git and github.

Whenever possible, use official images or images with lots of pulls and stars.  What is good about Docker Hub is that it scans your images for security vulnerabilities.

Docker Commands
Docker Pull
There can be many registries for docker images.  The default registry is docker hub.  If a namespace (path) is not provided, the docker command will assume you are asking for an official image.  Official images do not have namespaces.  To pull an unofficial image, you have to provide the path that is given in the "Docker pull command" window.

Docker store will replace docker hub.  It will be like google play.

Dockerfiles
A Dockerfile is like the python requirements.txt file.

A Docker image consists of files called layers.  Docker understands when a layer has changed and uses that knowledge to make efficient pulls and bilds.
